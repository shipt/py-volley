kind: pipeline
name: unit-tests
type: docker

trigger:
  event:
    - push
    - pull_request
    - tag

steps:
  - name: unit-test-3.10.2
    image: python:3.10.2
    commands:
    - apt-get update && apt-get install -y librdkafka-dev
    - pip install poetry==1.1.13
    - poetry install -E all
    - make test.unit
    - poetry run pytest --ignore=tests/integration_tests

  - name: code-analysis
    image: plugins/sonarqube-drone-plugin
    environment:
      SONAR_HOST:
        from_secret: SONAR_HOST
      SONAR_TOKEN:
        from_secret: SONAR_TOKEN
    depends_on:
      - unit-test-3.10.2

  - name: unit-test-3.9.8
    image: python:3.9.8
    commands:
    - pip install poetry==1.1.13
    - poetry install -E all
    - poetry run pytest --ignore=tests/integration_tests

  - name: unit-test-3.9
    image: python:3.9
    commands:
    - pip install poetry==1.1.13
    - poetry install -E all
    - poetry run pytest --ignore=tests/integration_tests

  - name: unit-test-3.8
    image: python:3.8
    commands:
    - pip install poetry==1.1.13
    - poetry install -E all
    - poetry run pytest --ignore=tests/integration_tests

---
kind: pipeline
type: docker
name: lints

workspace:
  path: /drone/src

trigger:
  event:
    - push
    - pull_request
    - tag

steps:
  - name: lints
    image: python:3.9.8
    commands:
      - pip install poetry==1.1.13
      - poetry install -E all
      - make lints

---
kind: pipeline
type: docker
name: int-tests

workspace:
  path: /drone/src

steps:
  - name: test-integration
    image: harbor.shipttech.com/apps/python-images/shipt-python:3.9.13_poetry_1.1.13
    environment:
      KAFKA_BROKERS: kafka:9092
    commands:
    - apt-get update && apt-get install -y librdkafka-dev
    - poetry install -E all
    - poetry run pytest tests/integration_tests/test_integration.py

services:
  - name: redis
    image: redis:latest
    ports:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
  - name: postgres
    restart: always
    image: postgres:12.3
    container_name: postgres
    ports:
      - 5432
    environment:
      POSTGRES_PASSWORD: password
  - name: zookeeper
    image: confluentinc/cp-zookeeper:5.2.5
    ports:
      - 2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_JMX_PORT: 39999
  - name: kafka
    image: confluentinc/cp-kafka:5.2.5
    restart: always
    ports:
      - 9092
      - 29092
      - 7071
      - 49999
    # https://rmoff.net/2018/08/02/kafka-listeners-explained/
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 49999

---
kind: pipeline
type: docker
name: release

workspace:
  path: /drone/src

trigger:
  event:
    - tag
  branch:
    - main

depends_on:
  - unit-tests
  - int-tests
  - lints

steps:
  - name: publish-release
    image: python:3.9.4
    environment:
      POETRY_HTTP_BASIC_PYPI_USERNAME:
        from_secret: PYPI_ORG_USERNAME
      POETRY_HTTP_BASIC_PYPI_PASSWORD:
        from_secret: PYPI_ORG_PASSWORD
    commands:
      - pip install poetry==1.1.13
      - test "v$(poetry version --short)" "=" "$DRONE_TAG"
        # publish to the public PyPI registry
      - poetry publish --build
