kind: pipeline
name: test
type: docker

trigger:
  event:
    - push
    - pull_request
    - tag
  branch:
    - main

steps:
  - name: unit-test-3.10.2
    image: python:3.10.2
    environment:
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD
    commands:
    - apt-get update && apt-get install -y librdkafka-dev
    - pip install poetry==1.1.13
    - poetry install -E all
    - poetry run pytest --ignore=tests/integration_tests

  - name: unit-test-3.9.8
    image: python:3.9.8
    environment:
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD
      CODECOV_TOKEN:
        from_secret: CODECOV_TOKEN
    commands:
    - pip install poetry==1.1.13
    - poetry install -E all
    - make test.unit
    - poetry run codecov

  - name: unit-test-3.9
    image: python:3.9
    environment:
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD
    commands:
    - pip install poetry==1.1.13
    - poetry install -E all
    - poetry run pytest --ignore=tests/integration_tests

  - name: unit-test-3.8
    image: python:3.8
    environment:
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD
    commands:
    - pip install poetry==1.1.13
    - poetry install -E all
    - poetry run pytest --ignore=tests/integration_tests

  - name: lints
    image: python:3.9.8
    environment:
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD
    commands:
      - pip install poetry==1.1.13
      - poetry install -E all
      - make lints

  - name: test-integration
    image: docker/compose
    environment:
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD
    volumes:
      - name: docker_socket
        path: /var/run/docker.sock
    commands:
    - apk add make
    - sed -i -e '/volumes:/,+1d' docker-compose.yml
    - make test.integration

  - name: cleanup-test-integration
    image: docker/compose
    volumes:
      - name: docker_socket
        path: /var/run/docker.sock
    commands:
      - docker-compose logs
      - docker-compose down --remove-orphans
    depends_on:
      - test-integration
    when:
      status:
      - failure
      - success

  - name: publish-release
    image: python:3.9.4
    environment:
      POETRY_HTTP_BASIC_SHIPT_DEPLOY_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_DEPLOY_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD
    commands:
      - pip install poetry==1.1.13
      - test "v$(poetry version --short)" "=" "$DRONE_TAG"
      - poetry config repositories.shipt-deploy https://artifactory.shipt.com/artifactory/api/pypi/pypi-local
      - poetry publish --repository shipt-deploy --build
    when:
      branch:
        - main
      event:
        - tag
    depends_on:
      - lints
      - unit-test-3.10.2
      - unit-test-3.9.8
      - unit-test-3.9
      - unit-test-3.8
      - test-integration