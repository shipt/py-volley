kind: pipeline
name: unit-tests
type: docker

trigger:
  event:
    - push
    - pull_request
    - tag

steps:
  - name: wait-for-services
    image: appropriate/nc
    commands:
      - timeout -t 60 sh -c 'until nc -vz redis 6379; do sleep 0.5; done'
      - timeout -t 60 sh -c 'until nc -vz postgres 5432; do sleep 0.5; done'
      - timeout -t 60 sh -c 'until nc -vz zookeeper 2181; do sleep 0.5; done'
      - timeout -t 60 sh -c 'until nc -vz kafka 9092; do sleep 0.5; done'

  - name: lints
    image: python:3.9
    commands:
      - curl -sSL https://install.python-poetry.org | POETRY_HOME=/ POETRY_VERSION=1.4.2 python3 -
      - poetry install -E all
      - makr format
      - make lints
    depends_on:
      - wait-for-services

  - name: unit-test-3.11
    image: python:3.11
    commands:
      - apt-get update -y && apt-get install -y --no-install-recommends gcc git libssl-dev g++ make
      - cd /tmp && git clone https://github.com/edenhill/librdkafka.git && cd librdkafka && ./configure --prefix=/usr && make && make install
      - cd /drone/src
      - curl -sSL https://install.python-poetry.org | POETRY_HOME=/ POETRY_VERSION=1.4.2 python3 -
      - poetry install -E all
      - poetry run pytest --ignore=tests/integration_tests
    depends_on:
      - lints

  - name: unit-test-3.10
    image: python:3.10
    commands:
      - curl -sSL https://install.python-poetry.org | POETRY_HOME=/ POETRY_VERSION=1.4.2 python3 -
      - poetry install -E all
      - poetry run pytest --ignore=tests/integration_tests
    depends_on:
      - lints

  - name: unit-test-3.9
    image: python:3.9
    commands:
      - curl -sSL https://install.python-poetry.org | POETRY_HOME=/ POETRY_VERSION=1.4.2 python3 -
      - poetry install -E all
      - poetry run pytest --ignore=tests/integration_tests
    depends_on:
      - lints

  - name: unit-test-3.8
    image: python:3.8
    commands:
      - curl -sSL https://install.python-poetry.org | POETRY_HOME=/ POETRY_VERSION=1.4.2 python3 -
      - poetry install -E all
      - poetry run pytest --ignore=tests/integration_tests
    depends_on:
      - lints

  - name: integration-test
    image: python:3.11
    commands:
      - curl -sSL https://install.python-poetry.org | POETRY_HOME=/ POETRY_VERSION=1.4.2 python3 -
      - poetry install -E all
      - poetry run pytest tests/integration_tests
    depends_on:
      - lints

  - name: code-analysis
    image: plugins/sonarqube-drone-plugin
    environment:
      SONAR_HOST:
        from_secret: SONAR_HOST
      SONAR_TOKEN:
        from_secret: SONAR_TOKEN
    depends_on:
      - unit-test-3.11
      - unit-test-3.10
      - unit-test-3.9
      - unit-test-3.8
      - integration-test

services:
  - name: redis
    image: redis
    ports:
      - 6379

  - name: postgres
    image: postgres:12.3
    ports:
      - 5432
    environment:
      POSTGRES_PASSWORD: password

  - name: zookeeper
    image: confluentinc/cp-zookeeper
    ports:
      - 2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  - name: kafka
    image: confluentinc/cp-kafka
    ports:
      - 9092
    # https://rmoff.net/2018/08/02/kafka-listeners-explained/
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

---
kind: pipeline
type: docker
name: release

workspace:
  path: /drone/src

trigger:
  event:
    - tag
  branch:
    - main

depends_on:
  - unit-tests

steps:
  - name: publish-release
    image: python:3.9
    environment:
      POETRY_HTTP_BASIC_PYPI_USERNAME:
        from_secret: PYPI_ORG_USERNAME
      POETRY_HTTP_BASIC_PYPI_PASSWORD:
        from_secret: PYPI_ORG_PASSWORD
    commands:
      - curl -sSL https://install.python-poetry.org | POETRY_HOME=/ POETRY_VERSION=1.4.2 python3 -
      - test "v$(poetry version --short)" "=" "$DRONE_TAG"
        # publish to the public PyPI registry
      - poetry publish --build

---
kind: pipeline
type: docker
name: publish-docs

depends_on:
  - unit-tests

workspace:
  path: /drone/src

trigger:
  event:
    - push
  branch:
    - main

steps:
  - name: publish-docs
    image: python:3.10.2
    commands:
      - curl -sSL https://install.python-poetry.org | POETRY_HOME=/ POETRY_VERSION=1.4.2 python3 -
      - git diff $DRONE_COMMIT_BEFORE..$DRONE_COMMIT_AFTER --name-only | grep docs/ && export DOC_CHANGE=1 || export DOC_CHANGE=0;
      - if [ $DOC_CHANGE ] ; then make publish.docs; else echo "No doc change"; fi
