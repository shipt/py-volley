kind: pipeline
name: unit-tests
type: docker

trigger:
  event:
    - push
    - pull_request
    - tag

steps:
  - name: unit-test-3.10.2
    image: python:3.10.2
    commands:
    - apt-get update && apt-get install -y librdkafka-dev
    - pip install poetry==1.1.13
    - poetry install -E all
    - make test.unit
    - poetry run pytest --ignore=tests/integration_tests

  - name: code-analysis
    image: plugins/sonarqube-drone-plugin
    environment:
      SONAR_HOST:
        from_secret: SONAR_HOST
      SONAR_TOKEN:
        from_secret: SONAR_TOKEN
    depends_on:
      - unit-test-3.10.2

  - name: unit-test-3.9.8
    image: python:3.9.8
    commands:
    - pip install poetry==1.1.13
    - poetry install -E all
    - poetry run pytest --ignore=tests/integration_tests

  - name: unit-test-3.9
    image: python:3.9
    commands:
    - pip install poetry==1.1.13
    - poetry install -E all
    - poetry run pytest --ignore=tests/integration_tests

  - name: unit-test-3.8
    image: python:3.8
    commands:
    - pip install poetry==1.1.13
    - poetry install -E all
    - poetry run pytest --ignore=tests/integration_tests

---
kind: pipeline
type: docker
name: lints

workspace:
  path: /drone/src

trigger:
  event:
    - push
    - pull_request
    - tag

steps:
  - name: lints
    image: python:3.9.8
    commands:
      - pip install poetry==1.1.13
      - poetry install -E all
      - make lints

---
kind: pipeline
type: docker
name: int-tests

workspace:
  path: /drone/src

trigger:
  event:
    - push
    - pull_request
    - tag
  branch:
    - main

steps:
  - name: test-integration
    image: docker/compose
    volumes:
      - name: docker_socket
        path: /var/run/docker.sock
    commands:
    - apk add make
    - sed -i -e '/volumes:/,+1d' docker-compose.yml
    - make test.integration

  - name: cleanup-test-integration
    image: docker/compose
    volumes:
      - name: docker_socket
        path: /var/run/docker.sock
    commands:
      - docker-compose logs
      - docker-compose down --remove-orphans
    depends_on:
      - test-integration
    when:
      status:
      - failure
      - success

---
kind: pipeline
type: docker
name: release

workspace:
  path: /drone/src

trigger:
  event:
    - tag
  branch:
    - main

depends_on:
  - unit-tests
  - int-tests
  - lints

steps:
  - name: publish-release
    image: python:3.9.4
    environment:
      POETRY_HTTP_BASIC_PYPI_USERNAME:
        from_secret: PYPI_ORG_USERNAME
      POETRY_HTTP_BASIC_PYPI_PASSWORD:
        from_secret: PYPI_ORG_PASSWORD
    commands:
      - pip install poetry==1.1.13
      - test "v$(poetry version --short)" "=" "$DRONE_TAG"
        # publish to the public PyPI registry
      - poetry publish --build

---
kind: pipeline
type: docker
name: publish-docs

workspace:
  path: /drone/src

trigger:
  event:
    - push
  branch:
    - main

steps:
  - name: publish-docs
    image: python:3.9.4
    commands:
      - git diff --name-only | grep docs/ && DOC_CHANGE=1 || DOC_CHANGE=0; echo $DOC_CHANGE
      - if [ -z "$DOC_CHANGE" ] ; then poetry install && cd docs && poetry run mkdocs gh-deploy; else echo "No doc change"