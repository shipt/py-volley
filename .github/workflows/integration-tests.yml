name: integration tests

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    container: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.5.1"]
        os: [ubuntu]
    services:
      redis:
        image: redis
      postgres:
        image: postgres:12.3
        env:
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      zookeeper:
        image: bitnami/zookeeper
        ports:
          - 2181:2181
        env:
          ALLOW_ANONYMOUS_LOGIN: yes
        options: >-
          --health-cmd "echo mntr | nc -w 2 -q 2 localhost 2181"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      kafka:
        image: confluentinc/cp-kafka
        # https://rmoff.net/2018/08/02/kafka-listeners-explained/
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        options: >-
          --health-cmd "kafka-broker-api-versions.sh --version"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pip3 install poetry==${{ matrix.poetry-version }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
      - run: make setup.project
      - run: make test.integration

  unit-test:
    needs: lints
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        poetry-version: ["1.5.1"]
        os: [ubuntu, macos]

    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pip3 install poetry==${{ matrix.poetry-version }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
      - run: make setup.project
      - run: make test.unit
