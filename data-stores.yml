version: '3.5'
services:
    redis:
        container_name: redis
        image: redis:latest
        ports:
            - 6379:6379
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 5s
            timeout: 30s
            retries: 50
        networks:
            - bundle-engine
    postgres:
        restart: always
        image: postgres:12.3
        container_name: postgres
        ports:
            - 5432:5432
        environment:
            POSTGRES_PASSWORD: password
        networks:
            - bundle-engine
    # Zookeeper required for Kafka broker at this time
    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
            KAFKA_JMX_PORT: 39999
        networks:
            - bundle-engine
    # Kakfa container required for unit testing
    kafka:
        image: confluentinc/cp-kafka:latest
        container_name: kafka
        restart: always
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
            - "7071:7071"
            - "49999:49999"
        # https://rmoff.net/2018/08/02/kafka-listeners-explained/
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_JMX_PORT: 49999
        networks:
            - bundle-engine
    metrics:
        networks:
            - bundle-engine
        container_name: metrics
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
        ports:
        - 8000:8000
        build:
            context: .
            dockerfile: Dockerfile
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        volumes:
            - ./:/app/
        depends_on:
            - redis
        command: uvicorn monitoring.monitoring:app
networks:
  bundle-engine:
    driver: bridge
    name: bundle-engine