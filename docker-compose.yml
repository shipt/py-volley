version: '3.5'
services:
    data_producer:
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - KAFKA_BROKERS=kafka:29092
        build:
            context: .
            dockerfile: Dockerfile
            target: dev
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        depends_on:
            - kafka
        volumes:
            - ./:/app/ 
        # ports:
        #     - 5678:5678
        # command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client example.py external_producer
        command: python example.py external_producer

    input_worker:
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - KAFKA_BROKERS=kafka:29092
        build:
            target: dev
            context: .
            dockerfile: Dockerfile
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        depends_on:
            - kafka
            - redis
        volumes:
            - ./:/app/
        ports:
            - 3000:3000
        #     - 5678:5678
        # command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client example.py input_worker
        command: python example.py input_worker

    middle_worker:
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - KAFKA_BROKERS=kafka:29092
        build:
            target: dev
            context: .
            dockerfile: Dockerfile
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        depends_on:
            - redis
        volumes:
            - ./:/app/
        # ports:
        #     - 3000:3000
        #     - 5678:5678
        # command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client example.py middle_worker
        command: python example.py middle_worker

    output_worker:
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - KAFKA_BROKERS=kafka:29092
        build:
            target: dev
            context: .
            dockerfile: Dockerfile
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        depends_on:
            - redis
        volumes:
            - ./:/app/
        # ports:
            # - 3000:3000
            # - 5678:5678
        # command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client example.py output_worker
        command: python example.py output_worker

    data_consumer:
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - KAFKA_BROKERS=kafka:29092
        build:
            target: dev
            context: .
            dockerfile: Dockerfile
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        volumes:
            - ./:/app/
        depends_on:
            - kafka
        # ports:
        #     - 5678:5678
        # command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client example.py external_consumer
        command: python example.py external_consumer

    redis:
        container_name: redis
        image: redis:latest
        ports:
            - 6379:6379
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 5s
            timeout: 30s
            retries: 50

    zookeeper:
        image: confluentinc/cp-zookeeper:5.2.5
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
            KAFKA_JMX_PORT: 39999

    kafka:
        image: confluentinc/cp-kafka:5.2.5
        container_name: kafka
        restart: always
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
            - "29092:29092"
            - "7071:7071"
            - "49999:49999"
        # https://rmoff.net/2018/08/02/kafka-listeners-explained/
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_JMX_PORT: 49999

    postgres:
        restart: always
        image: postgres:12.3
        container_name: postgres
        ports:
            - 5432:5432
        environment:
            POSTGRES_PASSWORD: password

    int-tests:
        build:
            context: .
            dockerfile: Dockerfile
            target: dev
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        environment:
            APP_ENV: localhost
            KAFKA_BROKERS: kafka:29092
        volumes:
            - ./:/app/
        command: pytest tests/integration_tests/test_integration.py
