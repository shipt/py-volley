version: '3'
services:
    dummy_events:
        networks:
            - ml-bundle-engine_bundle-engine-net
        container_name: dummy_events
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - KAFKA_BROKERS=kafka:29092
        build:
            context: .
            dockerfile: Dockerfile
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        volumes:
            - ./:/app/
        depends_on:
            - kafka
        # ports:
        #     - 5678:5678
        # command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client main.py dummy_events
        command: python main.py dummy_events
    features:
        networks:
            - ml-bundle-engine_bundle-engine-net
        container_name: features
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - KAFKA_BROKERS=kafka:29092
        build:
            context: .
            dockerfile: Dockerfile
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        volumes:
            - ./:/app/
        ports:
            - 5678:5678
        command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client main.py features  kafka rsmq
        # command: python main.py features
    triage:
        networks:
            - ml-bundle-engine_bundle-engine-net
        container_name: triage
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
        build:
            context: .
            dockerfile: Dockerfile
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        volumes:
            - ./:/app/
        depends_on:
            - redis
        # ports:
        #     - 5678:5678
        # command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client main.py triage
        command: python main.py triage
    optimizer:
        networks:
            - ml-bundle-engine_bundle-engine-net
        container_name: optimizer
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
        build:
            context: .
            dockerfile: Dockerfile
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        volumes:
            - ./:/app/
        depends_on:
            - redis
        # ports:
        #     - 5678:5678
        # command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client main.py optimizer
        command: python main.py optimizer
    fallback:
        networks:
            - ml-bundle-engine_bundle-engine-net
        container_name: fallback
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
        build:
            context: .
            dockerfile: Dockerfile
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        volumes:
            - ./:/app/
        depends_on:
            - redis
        # ports:
        #     - 5678:5678
        # command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client main.py fallback
        command: python main.py fallback
    collector:
        networks:
            - ml-bundle-engine_bundle-engine-net
        container_name: collector
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
        build:
            context: .
            dockerfile: Dockerfile
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        volumes:
            - ./:/app/
        # ports:
        #     - 5678:5678
        # command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client main.py collector
        command: python main.py collector
    publisher:
        networks:
            - ml-bundle-engine_bundle-engine-net
        container_name: publisher
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - KAFKA_BROKERS=kafka:29092
        build:
            context: .
            dockerfile: Dockerfile
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        volumes:
            - ./:/app/
        # ports:
        #     - 5678:5678
        # command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client main.py publisher
        command: python main.py publisher
    dummy_consumer:
        networks:
            - ml-bundle-engine_bundle-engine-net
        container_name: dummy_consumer
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - KAFKA_BROKERS=kafka:29092
        build:
            context: .
            dockerfile: Dockerfile
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        volumes:
            - ./:/app/
        # ports:
        #     - 5678:5678
        # command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client main.py dummy_consumer
        command: python main.py dummy_consumer
networks:
  ml-bundle-engine_bundle-engine-net:
    external: true
