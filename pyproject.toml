[tool.poetry]
name = "py_volley"
version = "0.23.0"
description = "Pluggable message queueing for Python"
authors = ["ask-machine-learning <shipt@shipt.com>"]
readme = "README.md"

packages = [
    { include = "volley" },
]

[tool.poetry.urls]
"Homepage" = "https://github.com/shipt/py-volley"
"Repository" = "https://github.com/shipt/py-volley"
"Documentation" = "https://shipt.github.io/py-volley/"

[tool.poetry.dependencies]
python = "^3.8,<3.11"
prometheus-client = ">=0.11.0, <0.15.0"
pydantic = ">=1.8.2, <1.11"
PyYAML = ">=5.4.1, <6.1"
orjson = ">=3.6.4, <4.0"
msgpack = "^1.0.3"
starlette = "<1"
uvicorn = "<1"

confluent-kafka = {version ="^1.8.2", optional = true}
PyRSMQ = {version ="^0.4.5", optional = true}
hiredis = {version ="^2.0", optional = true}
tenacity = {version ="^8.0.1", optional = true}
pyzmq = {version ="^22.3.0", optional = true}

[tool.poetry.extras]
all = ["confluent-kafka", "PyRSMQ", "hiredis", "tenacity", "pyzmq"]
rsmq = ["PyRSMQ", "hiredis", "tenacity"]
kafka = ["confluent-kafka"]
zmq = ["pyzmq"]

[tool.poetry.dev-dependencies]
flake8 = "^3.9.2"
mypy = "^0.910"
coverage = "^6.0"
black = "^22.3.0"
pytest = "^6.2.5"
isort = "^5.9.3"
pydantic = "^1.8.2"
debugpy = "^1.5.0"
pytest-cov = "^3.0.0"
types-requests = "^2.25.11"
types-pytz = "^2021.3.0"
mkdocs = "^1.2.3"
mkdocs-material = "^7.3.6"
mdx-include = "^1.4.1"
mkdocs-markdownextradata-plugin = "^0.2.4"
mkdocstrings = "^0.16.2"
psycopg2-binary = "^2.9.2"
SQLAlchemy = "^1.4.27"
pylint = "^2.12.1"
pytest-asyncio = "^0.16.0"
types-PyYAML = "^6.0.3"
types-redis = "^4.1.10"
MarkupSafe = "2.0.1"
Jinja2 = "<3.0.0"

[tool.isort]
profile = "black"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage]
run.omit = [
    "./example/*",
    "./example.py",
    "./tests/*"
    ]
report.show_missing = true
report.fail_under = 98

[tool.black]
line-length = 120
target-version = ['py310', 'py39', 'py38']

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
markers = [
    "integration: mark a test as an integration test"
]

[tool.pylint.master]
ignore="example"

[tool.pylint.messages_control]
disable = "all"
enable = [
    "abstract-method",
    "arguments-differ",
    "differing-param-doc",
    "differing-type-doc",
    "invalid-overridden-method",
    "logging-fstring-interpolation",
    "missing-param-doc",
    "missing-raises-doc",
    "missing-return-doc",
    "missing-return-type-doc",
    "missing-yield-doc",
    "missing-yield-type-doc",
    "multiple-constructor-doc",
    "protected-access",
    "redundant-returns-doc",
    "redundant-yields-doc",
    "signature-differs",
    "super-init-not-called",
    "unused-argument",
    "unused-variable",
    "useless-object-inheritance"
]
