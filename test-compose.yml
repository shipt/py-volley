version: '3'
services:
    setup:
        networks:
        - src_bundle-engine-net
        container_name: features
        environment:
            - APP_ENV=localhost
            - KAFKA_BROKERS=kafka:29092
        build:
            context: .
            dockerfile: tests/Dockerfile.test
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        command: python tests/integration_tests/conftest.py
    features:
        networks:
        - src_bundle-engine-net
        container_name: features
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - KAFKA_BROKERS=kafka:29092
        build:
            context: .
            dockerfile: tests/Dockerfile.test
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        command: python main.py features
    triage:
        networks:
        - src_bundle-engine-net
        container_name: triage
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
        build:
            context: .
            dockerfile: tests/Dockerfile.test
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        command: python main.py triage
    optimizer:
        networks:
        - src_bundle-engine-net
        container_name: optimizer
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
        build:
            context: .
            dockerfile: tests/Dockerfile.test
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        command: python main.py optimizer
    fallback:
        networks:
        - src_bundle-engine-net
        container_name: fallback
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
        build:
            context: .
            dockerfile: tests/Dockerfile.test
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        command: python main.py fallback
    collector:
        networks:
        - src_bundle-engine-net
        container_name: collector
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
        build:
            context: .
            dockerfile: tests/Dockerfile.test
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        command: python main.py collector
    publisher:
        networks:
        - src_bundle-engine-net
        container_name: publisher
        environment:
            - APP_ENV=localhost
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - KAFKA_BROKERS=kafka:29092
        build:
            context: .
            dockerfile: tests/Dockerfile.test
            args:
                SHIPT_PYPI_USERNAME: ${POETRY_HTTP_BASIC_SHIPT_USERNAME}
                SHIPT_PYPI_PASSWORD: ${POETRY_HTTP_BASIC_SHIPT_PASSWORD}
        command: python main.py publisher
networks:
  src_bundle-engine-net:
    external: true